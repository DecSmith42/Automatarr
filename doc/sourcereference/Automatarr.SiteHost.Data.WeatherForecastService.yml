### YamlMime:ManagedReference
items:
- uid: Automatarr.SiteHost.Data.WeatherForecastService
  commentId: T:Automatarr.SiteHost.Data.WeatherForecastService
  id: WeatherForecastService
  parent: Automatarr.SiteHost.Data
  children:
  - Automatarr.SiteHost.Data.WeatherForecastService.GetForecastAsync(DateTime)
  langs:
  - csharp
  - vb
  name: WeatherForecastService
  nameWithType: WeatherForecastService
  fullName: Automatarr.SiteHost.Data.WeatherForecastService
  type: Class
  source:
    remote:
      path: src/Automatarr.SiteHost/Data/WeatherForecastService.cs
      branch: 63d39cc6027686573eb72624263a1f9afce1ef72
      repo: https://github.com/DecSmith42/automatarr
    id: WeatherForecastService
    path: ../src/Automatarr.SiteHost/Data/WeatherForecastService.cs
    startLine: 2
  assemblies:
  - Automatarr.SiteHost
  namespace: Automatarr.SiteHost.Data
  syntax:
    content: 'public class WeatherForecastService : object'
    content.vb: >-
      Public Class WeatherForecastService
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Automatarr.SiteHost.Data.WeatherForecastService.GetForecastAsync(DateTime)
  commentId: M:Automatarr.SiteHost.Data.WeatherForecastService.GetForecastAsync(DateTime)
  id: GetForecastAsync(DateTime)
  parent: Automatarr.SiteHost.Data.WeatherForecastService
  langs:
  - csharp
  - vb
  name: GetForecastAsync(DateTime)
  nameWithType: WeatherForecastService.GetForecastAsync(DateTime)
  fullName: Automatarr.SiteHost.Data.WeatherForecastService.GetForecastAsync(DateTime)
  type: Method
  source:
    remote:
      path: src/Automatarr.SiteHost/Data/WeatherForecastService.cs
      branch: 63d39cc6027686573eb72624263a1f9afce1ef72
      repo: https://github.com/DecSmith42/automatarr
    id: GetForecastAsync
    path: ../src/Automatarr.SiteHost/Data/WeatherForecastService.cs
    startLine: 9
  assemblies:
  - Automatarr.SiteHost
  namespace: Automatarr.SiteHost.Data
  syntax:
    content: public Task<WeatherForecast[]> GetForecastAsync(DateTime startDate)
    parameters:
    - id: startDate
      type: DateTime
    return:
      type: Task{Automatarr.SiteHost.Data.WeatherForecast[]}
    content.vb: Public Function GetForecastAsync(startDate As DateTime) As Task(Of WeatherForecast())
  overload: Automatarr.SiteHost.Data.WeatherForecastService.GetForecastAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Automatarr.SiteHost.Data
  commentId: N:Automatarr.SiteHost.Data
  name: Automatarr.SiteHost.Data
  nameWithType: Automatarr.SiteHost.Data
  fullName: Automatarr.SiteHost.Data
- uid: Automatarr.SiteHost.Data.WeatherForecastService.GetForecastAsync*
  commentId: Overload:Automatarr.SiteHost.Data.WeatherForecastService.GetForecastAsync
  name: GetForecastAsync
  nameWithType: WeatherForecastService.GetForecastAsync
  fullName: Automatarr.SiteHost.Data.WeatherForecastService.GetForecastAsync
- uid: DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: DateTime
- uid: Task{Automatarr.SiteHost.Data.WeatherForecast[]}
  commentId: '!:Task{Automatarr.SiteHost.Data.WeatherForecast[]}'
  definition: Task`1
  name: Task<WeatherForecast[]>
  nameWithType: Task<WeatherForecast[]>
  fullName: Task<Automatarr.SiteHost.Data.WeatherForecast[]>
  nameWithType.vb: Task(Of WeatherForecast())
  fullName.vb: Task(Of Automatarr.SiteHost.Data.WeatherForecast())
  name.vb: Task(Of WeatherForecast())
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Automatarr.SiteHost.Data.WeatherForecast
    name: WeatherForecast
    nameWithType: WeatherForecast
    fullName: Automatarr.SiteHost.Data.WeatherForecast
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Automatarr.SiteHost.Data.WeatherForecast
    name: WeatherForecast
    nameWithType: WeatherForecast
    fullName: Automatarr.SiteHost.Data.WeatherForecast
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  commentId: '!:Task`1'
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
